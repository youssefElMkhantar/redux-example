{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialeState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialeState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n// const counterReducer = (state = initialeState, action) => {\n//     if(action.type === \"increment\"){\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n//     if(action.type === \"decrement\"){\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n//     if(action.type === \"toggle\"){\n//         return {\n//             counter: state.counter,\n//             showCounter: !state.showCounter\n//         }\n//     }\n//     return state;\n// };\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialeState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","amount","toggle","store","reducer","counterActions","actions"],"sources":["/Users/youssefelmkhantar/Desktop/redux-example/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from '@reduxjs/toolkit';\n\nconst initialeState = { counter: 0, showCounter: true}\n\nconst counterSlice = createSlice({\n    name: \"counter\",\n    initialState: initialeState,\n    reducers: {\n        increment(state){\n            state.counter++;\n        },\n        decrement(state){\n            state.counter--;\n        },\n        increase(state, action){\n            state.counter = state.counter + action.amount\n        },\n        toggle(state){\n            state.showCounter = !state.showCounter;\n        }\n    }\n})\n\n// const counterReducer = (state = initialeState, action) => {\n//     if(action.type === \"increment\"){\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n//     if(action.type === \"decrement\"){\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n//     if(action.type === \"toggle\"){\n//         return {\n//             counter: state.counter,\n//             showCounter: !state.showCounter\n//         }\n//     }\n//     return state;\n// };\n\nconst store = configureStore({\n    reducer: counterSlice.reducer\n});\n\nexport const counterActions = counterSlice.actions;\n\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,aAAa,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAI,CAAC;AAEtD,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC7BM,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEL,aAAa;EAC3BM,QAAQ,EAAE;IACNC,SAAS,CAACC,KAAK,EAAC;MACZA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDQ,SAAS,CAACD,KAAK,EAAC;MACZA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDS,QAAQ,CAACF,KAAK,EAAEG,MAAM,EAAC;MACnBH,KAAK,CAACP,OAAO,GAAGO,KAAK,CAACP,OAAO,GAAGU,MAAM,CAACC,MAAM;IACjD,CAAC;IACDC,MAAM,CAACL,KAAK,EAAC;MACTA,KAAK,CAACN,WAAW,GAAG,CAACM,KAAK,CAACN,WAAW;IAC1C;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMY,KAAK,GAAGf,cAAc,CAAC;EACzBgB,OAAO,EAAEZ,YAAY,CAACY;AAC1B,CAAC,CAAC;AAEF,OAAO,MAAMC,cAAc,GAAGb,YAAY,CAACc,OAAO;AAElD,eAAeH,KAAK"},"metadata":{},"sourceType":"module"}